const database = "bpr-backend";

use(database);

// Events schema
db.runCommand({
	collMod: "events",
	validator: {
		$jsonSchema: {
			required: [
				"location",
				"last_updated",
				"country",
				"userID",
				"responderID",
				"resolved",
				"status"
			],
			properties: {
				location: {
					bsonType: "object",
					required: [
						"type",
						"coordinates"
					],
					properties: {
						type: {
							enum: ["Point"]
						},
						coordinates: {
							bsonType: "array",
							items: {
								type: "number"
							},
							maxItems: 2,
							minItems: 2
						},
					}
				},
				last_updated: {
					bsonType: "date"
				},
				country: {
					bsonType: "string"
				},
				userID: {
					bsonType: "string"
				},
				responderID: {
					bsonType: "string"
				},
				resolved: {
					bsonType: "bool"
				},
				status: {
					enum: [
						"received",
						"message_sent",
						"message_error",
                        "accepted",
						"resolved",
                        null
					]
				}
			}
		}
	}
});


// Locations schema 
db.runCommand({
	collMod: "locations",
	validator: {
		$jsonSchema: {
			required: [
				"userID",
				"location",
				"last_updated",
				"country"
			],
			properties: {
				userID: {
					bsonType: "string"
				},
				location: {
					bsonType: "object",
					required: [
						"type",
						"coordinates"
					],
					properties: {
						type: {
							enum: ["Point"]
						},
						coordinates: {
							bsonType: "array",
							items: {
								type: "number"
							},
							maxItems: 2,
							minItems: 2
						},
					}
				},
				last_updated: {
					bsonType: "date"
				},
				country: {
					bsonType: "string"
				}
			}
		}
	}
});

//2dSphere Index
db.locations.createIndex( { location : "2dsphere" } )